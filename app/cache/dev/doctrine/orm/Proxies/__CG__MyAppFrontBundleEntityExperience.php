<?php

namespace Proxies\__CG__\MyApp\FrontBundle\Entity;

/**
 * DO NOT EDIT THIS FILE - IT WAS CREATED BY DOCTRINE'S PROXY GENERATOR
 */
class Experience extends \MyApp\FrontBundle\Entity\Experience implements \Doctrine\ORM\Proxy\Proxy
{
    /**
     * @var \Closure the callback responsible for loading properties in the proxy object. This callback is called with
     *      three parameters, being respectively the proxy object to be initialized, the method that triggered the
     *      initialization process and an array of ordered parameters that were passed to that method.
     *
     * @see \Doctrine\Common\Persistence\Proxy::__setInitializer
     */
    public $__initializer__;

    /**
     * @var \Closure the callback responsible of loading properties that need to be copied in the cloned object
     *
     * @see \Doctrine\Common\Persistence\Proxy::__setCloner
     */
    public $__cloner__;

    /**
     * @var boolean flag indicating if this object was already initialized
     *
     * @see \Doctrine\Common\Persistence\Proxy::__isInitialized
     */
    public $__isInitialized__ = false;

    /**
     * @var array properties to be lazy loaded, with keys being the property
     *            names and values being their default values
     *
     * @see \Doctrine\Common\Persistence\Proxy::__getLazyProperties
     */
    public static $lazyPropertiesDefaults = array();



    /**
     * @param \Closure $initializer
     * @param \Closure $cloner
     */
    public function __construct($initializer = null, $cloner = null)
    {

        $this->__initializer__ = $initializer;
        $this->__cloner__      = $cloner;
    }







    /**
     * 
     * @return array
     */
    public function __sleep()
    {
        if ($this->__isInitialized__) {
            return array('__isInitialized__', '' . "\0" . 'MyApp\\FrontBundle\\Entity\\Experience' . "\0" . 'id', '' . "\0" . 'MyApp\\FrontBundle\\Entity\\Experience' . "\0" . 'titre', '' . "\0" . 'MyApp\\FrontBundle\\Entity\\Experience' . "\0" . 'contenu', '' . "\0" . 'MyApp\\FrontBundle\\Entity\\Experience' . "\0" . 'date', '' . "\0" . 'MyApp\\FrontBundle\\Entity\\Experience' . "\0" . 'datefin', '' . "\0" . 'MyApp\\FrontBundle\\Entity\\Experience' . "\0" . 'pays', '' . "\0" . 'MyApp\\FrontBundle\\Entity\\Experience' . "\0" . 'type', '' . "\0" . 'MyApp\\FrontBundle\\Entity\\Experience' . "\0" . 'climat', '' . "\0" . 'MyApp\\FrontBundle\\Entity\\Experience' . "\0" . 'depense', '' . "\0" . 'MyApp\\FrontBundle\\Entity\\Experience' . "\0" . 'confirme', '' . "\0" . 'MyApp\\FrontBundle\\Entity\\Experience' . "\0" . 'note', '' . "\0" . 'MyApp\\FrontBundle\\Entity\\Experience' . "\0" . 'idUtilisateur');
        }

        return array('__isInitialized__', '' . "\0" . 'MyApp\\FrontBundle\\Entity\\Experience' . "\0" . 'id', '' . "\0" . 'MyApp\\FrontBundle\\Entity\\Experience' . "\0" . 'titre', '' . "\0" . 'MyApp\\FrontBundle\\Entity\\Experience' . "\0" . 'contenu', '' . "\0" . 'MyApp\\FrontBundle\\Entity\\Experience' . "\0" . 'date', '' . "\0" . 'MyApp\\FrontBundle\\Entity\\Experience' . "\0" . 'datefin', '' . "\0" . 'MyApp\\FrontBundle\\Entity\\Experience' . "\0" . 'pays', '' . "\0" . 'MyApp\\FrontBundle\\Entity\\Experience' . "\0" . 'type', '' . "\0" . 'MyApp\\FrontBundle\\Entity\\Experience' . "\0" . 'climat', '' . "\0" . 'MyApp\\FrontBundle\\Entity\\Experience' . "\0" . 'depense', '' . "\0" . 'MyApp\\FrontBundle\\Entity\\Experience' . "\0" . 'confirme', '' . "\0" . 'MyApp\\FrontBundle\\Entity\\Experience' . "\0" . 'note', '' . "\0" . 'MyApp\\FrontBundle\\Entity\\Experience' . "\0" . 'idUtilisateur');
    }

    /**
     * 
     */
    public function __wakeup()
    {
        if ( ! $this->__isInitialized__) {
            $this->__initializer__ = function (Experience $proxy) {
                $proxy->__setInitializer(null);
                $proxy->__setCloner(null);

                $existingProperties = get_object_vars($proxy);

                foreach ($proxy->__getLazyProperties() as $property => $defaultValue) {
                    if ( ! array_key_exists($property, $existingProperties)) {
                        $proxy->$property = $defaultValue;
                    }
                }
            };

        }
    }

    /**
     * 
     */
    public function __clone()
    {
        $this->__cloner__ && $this->__cloner__->__invoke($this, '__clone', array());
    }

    /**
     * Forces initialization of the proxy
     */
    public function __load()
    {
        $this->__initializer__ && $this->__initializer__->__invoke($this, '__load', array());
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __isInitialized()
    {
        return $this->__isInitialized__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitialized($initialized)
    {
        $this->__isInitialized__ = $initialized;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitializer(\Closure $initializer = null)
    {
        $this->__initializer__ = $initializer;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __getInitializer()
    {
        return $this->__initializer__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setCloner(\Closure $cloner = null)
    {
        $this->__cloner__ = $cloner;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific cloning logic
     */
    public function __getCloner()
    {
        return $this->__cloner__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     * @static
     */
    public function __getLazyProperties()
    {
        return self::$lazyPropertiesDefaults;
    }

    
    /**
     * {@inheritDoc}
     */
    public function setId($id)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setId', array($id));

        return parent::setId($id);
    }

    /**
     * {@inheritDoc}
     */
    public function setConfirme($confirme)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setConfirme', array($confirme));

        return parent::setConfirme($confirme);
    }

    /**
     * {@inheritDoc}
     */
    public function getConfirme()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getConfirme', array());

        return parent::getConfirme();
    }

    /**
     * {@inheritDoc}
     */
    public function getId()
    {
        if ($this->__isInitialized__ === false) {
            return (int)  parent::getId();
        }


        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getId', array());

        return parent::getId();
    }

    /**
     * {@inheritDoc}
     */
    public function setTitre($titre)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setTitre', array($titre));

        return parent::setTitre($titre);
    }

    /**
     * {@inheritDoc}
     */
    public function getTitre()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getTitre', array());

        return parent::getTitre();
    }

    /**
     * {@inheritDoc}
     */
    public function setContenu($contenu)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setContenu', array($contenu));

        return parent::setContenu($contenu);
    }

    /**
     * {@inheritDoc}
     */
    public function getContenu()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getContenu', array());

        return parent::getContenu();
    }

    /**
     * {@inheritDoc}
     */
    public function setDate($date)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setDate', array($date));

        return parent::setDate($date);
    }

    /**
     * {@inheritDoc}
     */
    public function getDate()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getDate', array());

        return parent::getDate();
    }

    /**
     * {@inheritDoc}
     */
    public function setDatefin($datefin)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setDatefin', array($datefin));

        return parent::setDatefin($datefin);
    }

    /**
     * {@inheritDoc}
     */
    public function getDatefin()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getDatefin', array());

        return parent::getDatefin();
    }

    /**
     * {@inheritDoc}
     */
    public function setPays($pays)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setPays', array($pays));

        return parent::setPays($pays);
    }

    /**
     * {@inheritDoc}
     */
    public function getPays()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getPays', array());

        return parent::getPays();
    }

    /**
     * {@inheritDoc}
     */
    public function setType($type)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setType', array($type));

        return parent::setType($type);
    }

    /**
     * {@inheritDoc}
     */
    public function getType()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getType', array());

        return parent::getType();
    }

    /**
     * {@inheritDoc}
     */
    public function setClimat($climat)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setClimat', array($climat));

        return parent::setClimat($climat);
    }

    /**
     * {@inheritDoc}
     */
    public function getClimat()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getClimat', array());

        return parent::getClimat();
    }

    /**
     * {@inheritDoc}
     */
    public function setDepense($depense)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setDepense', array($depense));

        return parent::setDepense($depense);
    }

    /**
     * {@inheritDoc}
     */
    public function getDepense()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getDepense', array());

        return parent::getDepense();
    }

    /**
     * {@inheritDoc}
     */
    public function setNote($note)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setNote', array($note));

        return parent::setNote($note);
    }

    /**
     * {@inheritDoc}
     */
    public function getNote()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getNote', array());

        return parent::getNote();
    }

    /**
     * {@inheritDoc}
     */
    public function setIdUtilisateur(\MyApp\FrontBundle\Entity\Utilisateur $idUtilisateur = NULL)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setIdUtilisateur', array($idUtilisateur));

        return parent::setIdUtilisateur($idUtilisateur);
    }

    /**
     * {@inheritDoc}
     */
    public function getIdUtilisateur()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getIdUtilisateur', array());

        return parent::getIdUtilisateur();
    }

}
